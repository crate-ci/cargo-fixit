<svg width="886px" height="974px" xmlns="http://www.w3.org/2000/svg">
  <style>
    .fg { fill: #AAAAAA }
    .bg { fill: #000000 }
    .container {
      padding: 0 10px;
      line-height: 18px;
    }
    tspan {
      font: 14px SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;
      white-space: pre;
      line-height: 18px;
    }
  </style>

  <rect width="100%" height="100%" y="0" rx="4.5" class="bg" />

  <text xml:space="preserve" class="container fg">
    <tspan x="10px" y="28px"><tspan>Proposed fixit commands for cargo</tspan>
</tspan>
    <tspan x="10px" y="46px">
</tspan>
    <tspan x="10px" y="64px"><tspan>Usage: cargo fixit [OPTIONS]</tspan>
</tspan>
    <tspan x="10px" y="82px">
</tspan>
    <tspan x="10px" y="100px"><tspan>Options:</tspan>
</tspan>
    <tspan x="10px" y="118px"><tspan>      --clippy        Run `clippy` instead of `check`</tspan>
</tspan>
    <tspan x="10px" y="136px"><tspan>      --broken-code   Fix code even if it already has compiler errors</tspan>
</tspan>
    <tspan x="10px" y="154px"><tspan>      --color &lt;WHEN&gt;  Controls when to use color [default: auto] [possible values: auto, always, never]</tspan>
</tspan>
    <tspan x="10px" y="172px"><tspan>      --allow-no-vcs  Fix code even if a VCS was not detected</tspan>
</tspan>
    <tspan x="10px" y="190px"><tspan>      --allow-dirty   Fix code even if the working directory is dirty or has staged changes</tspan>
</tspan>
    <tspan x="10px" y="208px"><tspan>      --allow-staged  Fix code even if the working directory has staged changes</tspan>
</tspan>
    <tspan x="10px" y="226px"><tspan>  -Z &lt;FLAG&gt;           Unstable (nightly-only) flags</tspan>
</tspan>
    <tspan x="10px" y="244px"><tspan>  -h, --help          Print help</tspan>
</tspan>
    <tspan x="10px" y="262px"><tspan>  -V, --version       Print version</tspan>
</tspan>
    <tspan x="10px" y="280px">
</tspan>
    <tspan x="10px" y="298px"><tspan>Package Selection:</tspan>
</tspan>
    <tspan x="10px" y="316px"><tspan>  -p, --package &lt;SPEC&gt;  Package(s) to fix</tspan>
</tspan>
    <tspan x="10px" y="334px"><tspan>      --workspace       Fix all packages in the workspace</tspan>
</tspan>
    <tspan x="10px" y="352px"><tspan>      --exclude &lt;SPEC&gt;  Exclude packages from the fixes</tspan>
</tspan>
    <tspan x="10px" y="370px"><tspan>      --all             Alias for --workspace (deprecated)</tspan>
</tspan>
    <tspan x="10px" y="388px">
</tspan>
    <tspan x="10px" y="406px"><tspan>Target Selection:</tspan>
</tspan>
    <tspan x="10px" y="424px"><tspan>      --lib             Fix only this package's library</tspan>
</tspan>
    <tspan x="10px" y="442px"><tspan>      --bins            Fix all binaries</tspan>
</tspan>
    <tspan x="10px" y="460px"><tspan>      --bin &lt;NAME&gt;      Fix only the specified binary</tspan>
</tspan>
    <tspan x="10px" y="478px"><tspan>      --examples        Fix all examples</tspan>
</tspan>
    <tspan x="10px" y="496px"><tspan>      --example &lt;NAME&gt;  Fix only the specified binary</tspan>
</tspan>
    <tspan x="10px" y="514px"><tspan>      --tests           Fix all tests</tspan>
</tspan>
    <tspan x="10px" y="532px"><tspan>      --test &lt;NAME&gt;     Fix only the specified test</tspan>
</tspan>
    <tspan x="10px" y="550px"><tspan>      --benches         Fix all benches</tspan>
</tspan>
    <tspan x="10px" y="568px"><tspan>      --bench &lt;NAME&gt;    Fix only the specified bench</tspan>
</tspan>
    <tspan x="10px" y="586px"><tspan>      --all-targets     Fix all targets</tspan>
</tspan>
    <tspan x="10px" y="604px">
</tspan>
    <tspan x="10px" y="622px"><tspan>Feature Selection:</tspan>
</tspan>
    <tspan x="10px" y="640px"><tspan>  -F, --features &lt;FEATURES&gt;  Space or comma separated list of features to activate</tspan>
</tspan>
    <tspan x="10px" y="658px"><tspan>      --all-features         Activate all available features</tspan>
</tspan>
    <tspan x="10px" y="676px"><tspan>      --no-default-features  Do not activate the `default` feature</tspan>
</tspan>
    <tspan x="10px" y="694px">
</tspan>
    <tspan x="10px" y="712px"><tspan>Compilation Options:</tspan>
</tspan>
    <tspan x="10px" y="730px"><tspan>      --jobs &lt;N&gt;                Number of parallel jobs, defaults to # of CPUs</tspan>
</tspan>
    <tspan x="10px" y="748px"><tspan>      --release                 Fix artifacts in release mode, with optimizations</tspan>
</tspan>
    <tspan x="10px" y="766px"><tspan>      --profile &lt;PROFILE-NAME&gt;  Build artifacts with the specified profile</tspan>
</tspan>
    <tspan x="10px" y="784px"><tspan>      --target &lt;TRIPLE&gt;         Fix for the target triple</tspan>
</tspan>
    <tspan x="10px" y="802px"><tspan>      --target-dir &lt;DIRECTORY&gt;  Directory for all generated artifacts</tspan>
</tspan>
    <tspan x="10px" y="820px">
</tspan>
    <tspan x="10px" y="838px"><tspan>Manifest Options:</tspan>
</tspan>
    <tspan x="10px" y="856px"><tspan>      --manifest-path &lt;PATH&gt;  Path to Cargo.toml</tspan>
</tspan>
    <tspan x="10px" y="874px"><tspan>      --lockfile-path &lt;PATH&gt;  Path to Cargo.lock (unstable)</tspan>
</tspan>
    <tspan x="10px" y="892px"><tspan>      --ignore-rust-version   Ignore `rust-version` specification in packages</tspan>
</tspan>
    <tspan x="10px" y="910px"><tspan>      --locked                Assert that `Cargo.lock` will remain unchanged</tspan>
</tspan>
    <tspan x="10px" y="928px"><tspan>      --offline               Run without accessing the network</tspan>
</tspan>
    <tspan x="10px" y="946px"><tspan>      --frozen                Equivalent to specifying both --locked and --offline</tspan>
</tspan>
    <tspan x="10px" y="964px">
</tspan>
  </text>

</svg>
